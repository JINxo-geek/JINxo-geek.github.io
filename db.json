{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/Staticfile","path":"Staticfile","modified":0,"renderable":0},{"_id":"themes/alpha-dust/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/alpha-dust/source/img/bg-pattern.png","path":"img/bg-pattern.png","modified":0,"renderable":1},{"_id":"themes/alpha-dust/source/js/main.js","path":"js/main.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492814292379},{"_id":"themes/alpha-dust/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1493518844436},{"_id":"themes/alpha-dust/_config.yml","hash":"3cb1daf7db47dbb1cee1a6068e71414147c41d6a","modified":1493527196590},{"_id":"themes/alpha-dust/LICENSE","hash":"9603ca6555bd5f0710038003b8a503bd29ca67a1","modified":1493518844437},{"_id":"themes/alpha-dust/README.md","hash":"402518c350275303ede195a62e9e05bfa236b190","modified":1493518844439},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1495036324180},{"_id":"source/_posts/ssh.md","hash":"440360d836281d49742aff9186c0326ebdb5b402","modified":1495017345545},{"_id":"source/_posts/回调函数.md","hash":"a656becb5f20daedb3f3e94b20afeac2a22acef9","modified":1494147544395},{"_id":"source/_posts/数据结构队列篇.md","hash":"a6727081a68e548c61578a135385a914f9079cbc","modified":1497272152737},{"_id":"source/_posts/热拔插.md","hash":"70562331415ef12031c98c1e64fd9f2f58528648","modified":1494147541922},{"_id":"source/_posts/硬盘.md","hash":"0d08b07dc19103f6f8018cec62ee4dbc53b73b4d","modified":1494147543549},{"_id":"source/_posts/虚拟内存.md","hash":"7de75cc9f41c55a50d0bd4c08871af4c00a20952","modified":1494147544783},{"_id":"themes/alpha-dust/.git/config","hash":"47b0f56eef1c839a07f772798249ba75be67ab01","modified":1493518844393},{"_id":"themes/alpha-dust/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1493518844368},{"_id":"themes/alpha-dust/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1493518839084},{"_id":"themes/alpha-dust/.git/index","hash":"1e83043a761ad0dccd68d2e4dbcaf2e2477c0006","modified":1493526073431},{"_id":"themes/alpha-dust/.git/packed-refs","hash":"400cc24bb8b50a2912e568b930442deb1074cc30","modified":1493518844344},{"_id":"themes/alpha-dust/languages/de.yml","hash":"02a98ba2b93e30a00ae7979fbe90b767a27290f0","modified":1493518844444},{"_id":"themes/alpha-dust/languages/default.yml","hash":"f0e62ce15272b2c59c9ae7f7615a286c69bf7113","modified":1493518844446},{"_id":"themes/alpha-dust/languages/en.yml","hash":"f0e62ce15272b2c59c9ae7f7615a286c69bf7113","modified":1493518844448},{"_id":"themes/alpha-dust/languages/es.yml","hash":"fb089145368422ac47da9eb00fed05b15c904aa2","modified":1493518844449},{"_id":"themes/alpha-dust/languages/fr.yml","hash":"10e3529b8492d7a7601d5b35b44d8fc9e8ea8d1b","modified":1493518844450},{"_id":"themes/alpha-dust/languages/no.yml","hash":"5ce3a1043ff85cecf83f3b5b0cdad2df44fa0192","modified":1493518844452},{"_id":"themes/alpha-dust/languages/pl.yml","hash":"6dc5d1b2aa75ae4c527089a770f43bafb91d80f4","modified":1493518844453},{"_id":"themes/alpha-dust/languages/pt.yml","hash":"6a31d548092af8af9f25d859063b0589c23ce13a","modified":1493518844454},{"_id":"themes/alpha-dust/languages/ru.yml","hash":"2cfaf93704ea4ac3f374c69bab89ca31916faa33","modified":1493518844455},{"_id":"themes/alpha-dust/languages/zh-TW.yml","hash":"45c84384a05fdb7e32a3e2d498ea180be7dccfa9","modified":1493518844459},{"_id":"themes/alpha-dust/languages/zh-CN.yml","hash":"6d712d9eb6ba12213dcd76b532cd86e9da83cfa3","modified":1493518844456},{"_id":"themes/alpha-dust/layout/index.ejs","hash":"0dcf6f1b66722ddadb7479f4edf20281d30a7879","modified":1493518844483},{"_id":"themes/alpha-dust/layout/layout.ejs","hash":"9d1ba5fb467ab4269cbc925b3f2122a29b821b8d","modified":1493518844484},{"_id":"themes/alpha-dust/layout/page.ejs","hash":"953256db94b3ed9ce2870d4b9203fe3a1e5b37bb","modified":1493518844485},{"_id":"themes/alpha-dust/layout/post.ejs","hash":"4030d46464fd653c0e72a7615c19e7b2d73aa21d","modified":1493518844486},{"_id":"themes/alpha-dust/layout/archive.ejs","hash":"30620dd5e4f24e9d624c235dd16396c5e130deef","modified":1493518844481},{"_id":"themes/alpha-dust/template/archive.html","hash":"6152dc2e093c1431cbe2fa6bc9cb54751c2a7f86","modified":1493518844513},{"_id":"themes/alpha-dust/template/index.html","hash":"674b2011f068af9bf464ac77aafccf6867fcd7c0","modified":1493518844565},{"_id":"themes/alpha-dust/template/post.html","hash":"daed2747ec15affef2fe1d5cc05432361a2ed6f9","modified":1493518844569},{"_id":"themes/alpha-dust/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1493518839102},{"_id":"themes/alpha-dust/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1493518839086},{"_id":"themes/alpha-dust/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1493518839088},{"_id":"themes/alpha-dust/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1493518839089},{"_id":"themes/alpha-dust/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1493518839087},{"_id":"themes/alpha-dust/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1493518839096},{"_id":"themes/alpha-dust/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1493518839090},{"_id":"themes/alpha-dust/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1493518839092},{"_id":"themes/alpha-dust/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1493518839094},{"_id":"themes/alpha-dust/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1493518839099},{"_id":"themes/alpha-dust/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1493518839097},{"_id":"themes/alpha-dust/.git/logs/HEAD","hash":"03806957ca20e7739125f6dc93b4c27ff551ae0c","modified":1493518844378},{"_id":"themes/alpha-dust/layout/_partial/article-archive.ejs","hash":"f9608407a583bff104acb07c03fd8108056798c7","modified":1493518844463},{"_id":"themes/alpha-dust/layout/_partial/after-footer.ejs","hash":"43ad85ba781c3c98354e9873fe8a49fe50f08bb4","modified":1493518844462},{"_id":"themes/alpha-dust/layout/_partial/footer_categories.ejs","hash":"f85cb280ae965fdd1d92af8bc0ece6c4d826a449","modified":1493518844470},{"_id":"themes/alpha-dust/layout/_partial/article-long.ejs","hash":"9e489edaacdc6bc7c8e60a85365510d135b9aaa5","modified":1493518844464},{"_id":"themes/alpha-dust/layout/_partial/footer_recent_posts.ejs","hash":"8c20579849498be304e47d0f10d42149971eb352","modified":1493518844471},{"_id":"themes/alpha-dust/layout/_partial/article-short.ejs","hash":"8158759b81ea61b07873f4e7360ec631ca0930ca","modified":1493518844466},{"_id":"themes/alpha-dust/layout/_partial/gallery.ejs","hash":"63c93ed2dc9c5d9eefeaa8130e9728848731fa64","modified":1493518844472},{"_id":"themes/alpha-dust/layout/_partial/google-analytics.ejs","hash":"b287b7f66a53b51c7cd872ad1b15dfd20fb3e35d","modified":1493518844475},{"_id":"themes/alpha-dust/layout/_partial/comments.ejs","hash":"b0bb9c59f517302348aafcb2b832513d53d59055","modified":1493518844467},{"_id":"themes/alpha-dust/layout/_partial/footer.ejs","hash":"b07b8f7f43811e1b6f5382f6eb4cd778a70bd3cc","modified":1493518844469},{"_id":"themes/alpha-dust/layout/_partial/header.ejs","hash":"4fa635135f97eaa5f324cf83cb04b083ffdd979f","modified":1493518844477},{"_id":"themes/alpha-dust/layout/_partial/menu.ejs","hash":"760cdaf07f808c9e8637f58e412aea43c4021ec2","modified":1493518844478},{"_id":"themes/alpha-dust/layout/_partial/head.ejs","hash":"3132acfe6658f31db95a4dae6d818b09b9156d59","modified":1493518844476},{"_id":"themes/alpha-dust/layout/_partial/pagination.ejs","hash":"58982acc8dc2b83c6c2cdf64a2c4156e947254d0","modified":1493518844480},{"_id":"themes/alpha-dust/template/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1493518844516},{"_id":"themes/alpha-dust/template/css/style.styl","hash":"a3d739266fbf9aff73443cf745e4a4d5c284cffc","modified":1493518844523},{"_id":"themes/alpha-dust/template/img/bg-pattern copy.png","hash":"932374ff0b431bf83d092948e1714d90254dd92e","modified":1493518844555},{"_id":"themes/alpha-dust/template/img/bg-pattern-blue.png","hash":"07016986a35c5bfc04c1599829d6a4798c966731","modified":1493518844557},{"_id":"themes/alpha-dust/template/img/bg-pattern.png","hash":"932374ff0b431bf83d092948e1714d90254dd92e","modified":1493518844559},{"_id":"themes/alpha-dust/template/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1493518844518},{"_id":"themes/alpha-dust/template/css/style.css","hash":"9c3710b32a4466c3ea5b6232a1af8fccc5877216","modified":1493518844520},{"_id":"themes/alpha-dust/template/img/hex-bg.png","hash":"a8444a553dd0fd7db09eda830bd3346cc87fc60e","modified":1493518844561},{"_id":"themes/alpha-dust/source/css/style.styl","hash":"17454ba3eef92075c4848bb43fd626b53760334b","modified":1493518844505},{"_id":"themes/alpha-dust/source/img/bg-pattern.png","hash":"932374ff0b431bf83d092948e1714d90254dd92e","modified":1493518844507},{"_id":"themes/alpha-dust/template/js/main.js","hash":"ed46e32f0bf6f4502a6558f9ad03843031dc318d","modified":1493518844567},{"_id":"themes/alpha-dust/source/js/main.js","hash":"e644dd5c0742f209072c48499c1beba20bc1e496","modified":1493518844509},{"_id":"themes/alpha-dust/template/img/session_image.jpeg","hash":"5a3669c0564044f56cb7cea464119a8e388fb18f","modified":1493518844563},{"_id":"themes/alpha-dust/template/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1493518844531},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1493518844534},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1493518844551},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1493518844553},{"_id":"themes/alpha-dust/.git/refs/heads/master","hash":"c6654c7b5035ae13d38229307a4061e5a26ba5d6","modified":1493518844376},{"_id":"themes/alpha-dust/.git/objects/pack/pack-4d118c00f6d25ab7f6007338f6ebe54ff579e562.idx","hash":"1c85589b7d4946b5464affc655b0f0a8317f0636","modified":1493518844061},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1493518844548},{"_id":"themes/alpha-dust/source/css/_partial/archive.styl","hash":"e51d15046b9e10d4342b67bb83fd3a0c42f5d60e","modified":1493518844490},{"_id":"themes/alpha-dust/source/css/_partial/header.styl","hash":"d74c2d8968b909c4e2cdab2235b5cebf6eef91c8","modified":1493518844497},{"_id":"themes/alpha-dust/source/css/_partial/base.styl","hash":"00300febf434b78ad93087e83481d2bf9d2c54a5","modified":1493518844492},{"_id":"themes/alpha-dust/source/css/_partial/pagination.styl","hash":"7dfcf43dd05063115f7ebf9e63219a102b35a3ba","modified":1493518844499},{"_id":"themes/alpha-dust/source/css/_partial/code.styl","hash":"6c0788e0616a366234157abd18cb6a11b4dc8bfc","modified":1493518844493},{"_id":"themes/alpha-dust/source/css/_partial/footer.styl","hash":"a741adad7f208787c5d863a443da9a3438a01331","modified":1493518844495},{"_id":"themes/alpha-dust/source/css/_partial/menu.styl","hash":"7419c10bf98d059fa0263427c68e009cc0d4c4fa","modified":1493518844498},{"_id":"themes/alpha-dust/source/css/_partial/post-content.styl","hash":"c3f0ae13c8a953e957da23db6ef7dab2b8217352","modified":1493518844501},{"_id":"themes/alpha-dust/source/css/_partial/post-layout.styl","hash":"bc8376e97266f047457117a965321efdd58e68a3","modified":1493518844502},{"_id":"themes/alpha-dust/source/css/_partial/variables.styl","hash":"f1dbc90648d67e03ba3b311c967977aa50888b38","modified":1493518844503},{"_id":"themes/alpha-dust/.git/logs/refs/heads/master","hash":"03806957ca20e7739125f6dc93b4c27ff551ae0c","modified":1493518844381},{"_id":"themes/alpha-dust/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1493518844361},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1493518844542},{"_id":"themes/alpha-dust/.git/logs/refs/remotes/origin/HEAD","hash":"03806957ca20e7739125f6dc93b4c27ff551ae0c","modified":1493518844361},{"_id":"themes/alpha-dust/.git/objects/pack/pack-4d118c00f6d25ab7f6007338f6ebe54ff579e562.pack","hash":"c4a318d37b31014579f91671e89e709d640c5fd3","modified":1493518844064},{"_id":"public/2017/06/11/数据结构队列篇/index.html","hash":"778b40f42f8c460b7b7a5f3a9cd0eae0247c3d85","modified":1497535206363},{"_id":"public/2017/05/17/hello-world/index.html","hash":"31f06c622713b6d6660dabd484da538d690080c3","modified":1497535206369},{"_id":"public/2017/05/17/ssh/index.html","hash":"1c34171e8ba181ec6f46f3c350b494cb9851ed4a","modified":1497535206370},{"_id":"public/2017/05/07/热拔插/index.html","hash":"c942d045c788fea35d5568661fa5e075ff152d9b","modified":1497535206370},{"_id":"public/2017/05/05/硬盘/index.html","hash":"76756808908f1a6cc600c0e634062806a705afd2","modified":1497535206370},{"_id":"public/2017/05/03/回调函数/index.html","hash":"21083603875607ba3dceedb63b7221acda8089c3","modified":1497535206370},{"_id":"public/2017/05/03/虚拟内存/index.html","hash":"c7d60f2b84e2bbf889708b8e3912ccb364bb7b2f","modified":1497535206370},{"_id":"public/categories/编程概念理解/index.html","hash":"b326a16971f4a8927678b97bcb96ae49ef23e39b","modified":1497535206370},{"_id":"public/categories/编程概念理解/硬件/index.html","hash":"a56cf97623eda9067625fa2c158c141de7bf3f27","modified":1497535206370},{"_id":"public/archives/index.html","hash":"1773d93d8e9fa1bec5dfa402ee211064e325be2d","modified":1497535206370},{"_id":"public/archives/page/2/index.html","hash":"b7299db5efb716261e7509cee9b0c2ae5b0a398a","modified":1497535206371},{"_id":"public/archives/page/3/index.html","hash":"b7299db5efb716261e7509cee9b0c2ae5b0a398a","modified":1497535206372},{"_id":"public/archives/2017/index.html","hash":"28d7c015360a849a2acffbbe9d0832a769237096","modified":1497535206373},{"_id":"public/archives/2017/page/2/index.html","hash":"b86951bf59677d1468dc2c77773ca06234696a5b","modified":1497535206373},{"_id":"public/archives/2017/page/3/index.html","hash":"b86951bf59677d1468dc2c77773ca06234696a5b","modified":1497535206373},{"_id":"public/archives/2017/05/index.html","hash":"4dacb7f62e0fbf6fc51e297002112bc6fe8a546f","modified":1497535206373},{"_id":"public/archives/2017/05/page/2/index.html","hash":"808793cece3033ba2c2cf873776a67a405930a30","modified":1497535206373},{"_id":"public/archives/2017/06/index.html","hash":"811864b12fd89da035ddc2f5478c813c2b94a5fa","modified":1497535206373},{"_id":"public/index.html","hash":"31be914202ebb2f3d828fa6d8cf68fd398a8fa8c","modified":1497535206373},{"_id":"public/page/2/index.html","hash":"e737b2b984521b89ddaa502403ec6dbea64680ef","modified":1497535206373},{"_id":"public/page/3/index.html","hash":"18a098be18201683d69bd431d5d0d1a5ec1082bc","modified":1497535206373},{"_id":"public/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497535206373},{"_id":"public/tags/数据结构/index.html","hash":"cf216d8abdaa66bb3d7066716d5988cdf8830be0","modified":1497535206376},{"_id":"public/img/bg-pattern.png","hash":"932374ff0b431bf83d092948e1714d90254dd92e","modified":1497535206376},{"_id":"public/js/main.js","hash":"7ee829ab42cf4d81280d20b5d664759436b19075","modified":1497535206734},{"_id":"public/css/style.css","hash":"a8b4312a0a6e600e3c1629df20e2860757370d10","modified":1497535206734}],"Category":[{"name":"编程概念理解","_id":"cj3yhsnys0003k4pt3ebrlwdr"},{"name":"硬件","parent":"cj3yhsnys0003k4pt3ebrlwdr","_id":"cj3yhsnze0009k4ptay09lxus"}],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-05-17T15:52:04.180Z","updated":"2017-05-17T15:52:04.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3yhsnyf0000k4ptxtva1uei","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"回调函数","author":"jin","date":"2017-05-03T03:37:00.000Z","_content":"你到一个商店买东西，刚好你要的东西没有货，于是你在店员那里留下了你的电话，过了几天店里有货了，店员就打了你的电话，然后你接到电话后就到店里去取了货。在这个例子里，你的电话号码就叫回调函数，你把电话留给店员就叫登记回调函数，店里后来有货了叫做触发了回调关联的事件，店员给你打电话叫做调用回调函数，你到店里去取货叫做响应回调事件。回答完毕。","source":"_posts/回调函数.md","raw":"title: 回调函数\ntags: []\ncategories:\n  - 编程概念理解\n  - 硬件\nauthor: jin\ndate: 2017-05-03 11:37:00\n---\n你到一个商店买东西，刚好你要的东西没有货，于是你在店员那里留下了你的电话，过了几天店里有货了，店员就打了你的电话，然后你接到电话后就到店里去取了货。在这个例子里，你的电话号码就叫回调函数，你把电话留给店员就叫登记回调函数，店里后来有货了叫做触发了回调关联的事件，店员给你打电话叫做调用回调函数，你到店里去取货叫做响应回调事件。回答完毕。","slug":"回调函数","published":1,"updated":"2017-05-07T08:59:04.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3yhsnym0001k4pttmean4sw","content":"<p>你到一个商店买东西，刚好你要的东西没有货，于是你在店员那里留下了你的电话，过了几天店里有货了，店员就打了你的电话，然后你接到电话后就到店里去取了货。在这个例子里，你的电话号码就叫回调函数，你把电话留给店员就叫登记回调函数，店里后来有货了叫做触发了回调关联的事件，店员给你打电话叫做调用回调函数，你到店里去取货叫做响应回调事件。回答完毕。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>你到一个商店买东西，刚好你要的东西没有货，于是你在店员那里留下了你的电话，过了几天店里有货了，店员就打了你的电话，然后你接到电话后就到店里去取了货。在这个例子里，你的电话号码就叫回调函数，你把电话留给店员就叫登记回调函数，店里后来有货了叫做触发了回调关联的事件，店员给你打电话叫做调用回调函数，你到店里去取货叫做响应回调事件。回答完毕。</p>\n"},{"title":"数据结构队列(C++)","date":"2017-06-11T09:17:33.122Z","_content":"数据结构是指互相之间存在一种或多种特定关系的数据元素的集合\n---\n<!--more-->\n\n# 什么是数据结构?\n\n数据结构是指互相之间存在一种或多种**特定关系**的数据元素的**集合**\n\n## 队列\n\n## **先进先出**  FIFO:first in first out\n\n普通队列:有两种情况\n第一种:售票员不动,第一个人买到票走后,后面一个人向前走,变成队列头,但是效率低\n第二种:售票员一直向后走,但是前面的内存空间就被浪费了![20170611172928](http://oocfz31zv.bkt.clouddn.com/20170611172928.png)\n环形队列\n元素空间可以重复利用:因为一般的环形队列都是一个元素数固定的一个闭环，可以在环形队列初始化的时候分配好确定的内存空间，当进队或出队时只需要返回指定元素内存空间的地址即可，这些内存空间可以重复利用，避免频繁内存分配和释放的开销。\n\n![20170611173419](http://oocfz31zv.bkt.clouddn.com/20170611173419.png)\n\n![20170611173926](http://oocfz31zv.bkt.clouddn.com/20170611173926.png)\n\n## 环形队列C++实现\n\n```c++\nclass MyQueue\n{\npublic:\n\tMyQueue(int queueCapacity);//创建队列\n\tvirtual ~MyQueue();//销毁队列,析构函数\n\tvoid ClearQueue();//清空队列\n\tbool QueueEmpty() const;//判空队列\n\tint QueueLength() const;//队列长度\n\tbool Enqueue(int element);//新元素入队\n\tbool DeQueue(int &element);//首元素出队\n\tvoid QueueTraverse();//遍历队列                                       \n\nprivate:\n\tint *m_pQueue;//队列数组指针\n\tint m_iQueueLen;//队列元素个数\n\tint m_iQueueCapacity;//队列数组容量\n\n}\n\n```\n\n![20170612193022](http://oocfz31zv.bkt.clouddn.com/20170612193022.png)\n\n\n\n\n\n\n","source":"_posts/数据结构队列篇.md","raw":"title: 数据结构队列(C++)\ndate: \ntags: 数据结构\n---\n数据结构是指互相之间存在一种或多种特定关系的数据元素的集合\n---\n<!--more-->\n\n# 什么是数据结构?\n\n数据结构是指互相之间存在一种或多种**特定关系**的数据元素的**集合**\n\n## 队列\n\n## **先进先出**  FIFO:first in first out\n\n普通队列:有两种情况\n第一种:售票员不动,第一个人买到票走后,后面一个人向前走,变成队列头,但是效率低\n第二种:售票员一直向后走,但是前面的内存空间就被浪费了![20170611172928](http://oocfz31zv.bkt.clouddn.com/20170611172928.png)\n环形队列\n元素空间可以重复利用:因为一般的环形队列都是一个元素数固定的一个闭环，可以在环形队列初始化的时候分配好确定的内存空间，当进队或出队时只需要返回指定元素内存空间的地址即可，这些内存空间可以重复利用，避免频繁内存分配和释放的开销。\n\n![20170611173419](http://oocfz31zv.bkt.clouddn.com/20170611173419.png)\n\n![20170611173926](http://oocfz31zv.bkt.clouddn.com/20170611173926.png)\n\n## 环形队列C++实现\n\n```c++\nclass MyQueue\n{\npublic:\n\tMyQueue(int queueCapacity);//创建队列\n\tvirtual ~MyQueue();//销毁队列,析构函数\n\tvoid ClearQueue();//清空队列\n\tbool QueueEmpty() const;//判空队列\n\tint QueueLength() const;//队列长度\n\tbool Enqueue(int element);//新元素入队\n\tbool DeQueue(int &element);//首元素出队\n\tvoid QueueTraverse();//遍历队列                                       \n\nprivate:\n\tint *m_pQueue;//队列数组指针\n\tint m_iQueueLen;//队列元素个数\n\tint m_iQueueCapacity;//队列数组容量\n\n}\n\n```\n\n![20170612193022](http://oocfz31zv.bkt.clouddn.com/20170612193022.png)\n\n\n\n\n\n\n","slug":"数据结构队列篇","published":1,"updated":"2017-06-12T12:55:52.737Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3yhsnyq0002k4pt6nuy23me","content":"<h2 id=\"数据结构是指互相之间存在一种或多种特定关系的数据元素的集合\"><a href=\"#数据结构是指互相之间存在一种或多种特定关系的数据元素的集合\" class=\"headerlink\" title=\"数据结构是指互相之间存在一种或多种特定关系的数据元素的集合\"></a>数据结构是指互相之间存在一种或多种特定关系的数据元素的集合</h2><a id=\"more\"></a>\n<h1 id=\"什么是数据结构\"><a href=\"#什么是数据结构\" class=\"headerlink\" title=\"什么是数据结构?\"></a>什么是数据结构?</h1><p>数据结构是指互相之间存在一种或多种<strong>特定关系</strong>的数据元素的<strong>集合</strong></p>\n<h2 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h2><h2 id=\"先进先出-FIFO-first-in-first-out\"><a href=\"#先进先出-FIFO-first-in-first-out\" class=\"headerlink\" title=\"先进先出  FIFO:first in first out\"></a><strong>先进先出</strong>  FIFO:first in first out</h2><p>普通队列:有两种情况<br>第一种:售票员不动,第一个人买到票走后,后面一个人向前走,变成队列头,但是效率低<br>第二种:售票员一直向后走,但是前面的内存空间就被浪费了<img src=\"http://oocfz31zv.bkt.clouddn.com/20170611172928.png\" alt=\"20170611172928\"><br>环形队列<br>元素空间可以重复利用:因为一般的环形队列都是一个元素数固定的一个闭环，可以在环形队列初始化的时候分配好确定的内存空间，当进队或出队时只需要返回指定元素内存空间的地址即可，这些内存空间可以重复利用，避免频繁内存分配和释放的开销。</p>\n<p><img src=\"http://oocfz31zv.bkt.clouddn.com/20170611173419.png\" alt=\"20170611173419\"></p>\n<p><img src=\"http://oocfz31zv.bkt.clouddn.com/20170611173926.png\" alt=\"20170611173926\"></p>\n<h2 id=\"环形队列C-实现\"><a href=\"#环形队列C-实现\" class=\"headerlink\" title=\"环形队列C++实现\"></a>环形队列C++实现</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyQueue</span></span></div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">\tMyQueue(<span class=\"keyword\">int</span> queueCapacity);<span class=\"comment\">//创建队列</span></div><div class=\"line\">\t<span class=\"keyword\">virtual</span> ~MyQueue();<span class=\"comment\">//销毁队列,析构函数</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ClearQueue</span><span class=\"params\">()</span></span>;<span class=\"comment\">//清空队列</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">QueueEmpty</span><span class=\"params\">()</span> <span class=\"keyword\">const</span></span>;<span class=\"comment\">//判空队列</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">QueueLength</span><span class=\"params\">()</span> <span class=\"keyword\">const</span></span>;<span class=\"comment\">//队列长度</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Enqueue</span><span class=\"params\">(<span class=\"keyword\">int</span> element)</span></span>;<span class=\"comment\">//新元素入队</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">DeQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;element)</span></span>;<span class=\"comment\">//首元素出队</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">QueueTraverse</span><span class=\"params\">()</span></span>;<span class=\"comment\">//遍历队列                                       </span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span>:</div><div class=\"line\">\t<span class=\"keyword\">int</span> *m_pQueue;<span class=\"comment\">//队列数组指针</span></div><div class=\"line\">\t<span class=\"keyword\">int</span> m_iQueueLen;<span class=\"comment\">//队列元素个数</span></div><div class=\"line\">\t<span class=\"keyword\">int</span> m_iQueueCapacity;<span class=\"comment\">//队列数组容量</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"http://oocfz31zv.bkt.clouddn.com/20170612193022.png\" alt=\"20170612193022\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"数据结构是指互相之间存在一种或多种特定关系的数据元素的集合\"><a href=\"#数据结构是指互相之间存在一种或多种特定关系的数据元素的集合\" class=\"headerlink\" title=\"数据结构是指互相之间存在一种或多种特定关系的数据元素的集合\"></a>数据结构是指互相之间存在一种或多种特定关系的数据元素的集合</h2>","more":"<h1 id=\"什么是数据结构\"><a href=\"#什么是数据结构\" class=\"headerlink\" title=\"什么是数据结构?\"></a>什么是数据结构?</h1><p>数据结构是指互相之间存在一种或多种<strong>特定关系</strong>的数据元素的<strong>集合</strong></p>\n<h2 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h2><h2 id=\"先进先出-FIFO-first-in-first-out\"><a href=\"#先进先出-FIFO-first-in-first-out\" class=\"headerlink\" title=\"先进先出  FIFO:first in first out\"></a><strong>先进先出</strong>  FIFO:first in first out</h2><p>普通队列:有两种情况<br>第一种:售票员不动,第一个人买到票走后,后面一个人向前走,变成队列头,但是效率低<br>第二种:售票员一直向后走,但是前面的内存空间就被浪费了<img src=\"http://oocfz31zv.bkt.clouddn.com/20170611172928.png\" alt=\"20170611172928\"><br>环形队列<br>元素空间可以重复利用:因为一般的环形队列都是一个元素数固定的一个闭环，可以在环形队列初始化的时候分配好确定的内存空间，当进队或出队时只需要返回指定元素内存空间的地址即可，这些内存空间可以重复利用，避免频繁内存分配和释放的开销。</p>\n<p><img src=\"http://oocfz31zv.bkt.clouddn.com/20170611173419.png\" alt=\"20170611173419\"></p>\n<p><img src=\"http://oocfz31zv.bkt.clouddn.com/20170611173926.png\" alt=\"20170611173926\"></p>\n<h2 id=\"环形队列C-实现\"><a href=\"#环形队列C-实现\" class=\"headerlink\" title=\"环形队列C++实现\"></a>环形队列C++实现</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyQueue</span></span></div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">\tMyQueue(<span class=\"keyword\">int</span> queueCapacity);<span class=\"comment\">//创建队列</span></div><div class=\"line\">\t<span class=\"keyword\">virtual</span> ~MyQueue();<span class=\"comment\">//销毁队列,析构函数</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ClearQueue</span><span class=\"params\">()</span></span>;<span class=\"comment\">//清空队列</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">QueueEmpty</span><span class=\"params\">()</span> <span class=\"keyword\">const</span></span>;<span class=\"comment\">//判空队列</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">QueueLength</span><span class=\"params\">()</span> <span class=\"keyword\">const</span></span>;<span class=\"comment\">//队列长度</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Enqueue</span><span class=\"params\">(<span class=\"keyword\">int</span> element)</span></span>;<span class=\"comment\">//新元素入队</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">DeQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;element)</span></span>;<span class=\"comment\">//首元素出队</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">QueueTraverse</span><span class=\"params\">()</span></span>;<span class=\"comment\">//遍历队列                                       </span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span>:</div><div class=\"line\">\t<span class=\"keyword\">int</span> *m_pQueue;<span class=\"comment\">//队列数组指针</span></div><div class=\"line\">\t<span class=\"keyword\">int</span> m_iQueueLen;<span class=\"comment\">//队列元素个数</span></div><div class=\"line\">\t<span class=\"keyword\">int</span> m_iQueueCapacity;<span class=\"comment\">//队列数组容量</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"http://oocfz31zv.bkt.clouddn.com/20170612193022.png\" alt=\"20170612193022\"></p>"},{"title":"ssh","date":"2017-05-17T10:35:45.000Z","_content":"","source":"_posts/ssh.md","raw":"---\ntitle: ssh\ndate: 2017-05-17 18:35:45\ntags:\n---\n","slug":"ssh","published":1,"updated":"2017-05-17T10:35:45.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3yhsnyy0004k4ptsrmfpr6i","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"硬盘","date":"2017-05-05T06:21:52.000Z","_content":"硬盘不是内存。\n硬盘是电脑主要的存储媒介之一，由一个或者多个铝制或者玻璃制的碟片组成。碟片外覆盖有铁磁性材料。\n<!-- more -->\n硬盘有固态硬盘（SSD 盘，新式硬盘）、机械硬盘（HDD 传统硬盘）、混合硬盘（HHD 一块基于传统机械硬盘诞生出来的新硬盘）。SSD采用闪存颗粒来存储，HDD采用磁性碟片来存储，混合硬盘（HHD: Hybrid Hard Disk）是把磁性硬盘和闪存集成到一起的一种硬盘。绝大多数硬盘都是固定硬盘，被永久性地密封固定在硬盘驱动器中。\n内存是计算机中重要的部件之一，它是与CPU进行沟通的桥梁。计算机中所有程序的运行都是在内存中进行的，因此内存的性能对计算机的影响非常大。内存（Memory）也被称为内存储器，其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来，内存的运行也决定了计算机的稳定运行。 内存是由内存芯片、电路板、金手指等部分组成的\n\n![upload successful](\\\\images\\image.png\\)","source":"_posts/硬盘.md","raw":"title: 硬盘\ndate: 2017-05-05 14:21:52\n---\n硬盘不是内存。\n硬盘是电脑主要的存储媒介之一，由一个或者多个铝制或者玻璃制的碟片组成。碟片外覆盖有铁磁性材料。\n<!-- more -->\n硬盘有固态硬盘（SSD 盘，新式硬盘）、机械硬盘（HDD 传统硬盘）、混合硬盘（HHD 一块基于传统机械硬盘诞生出来的新硬盘）。SSD采用闪存颗粒来存储，HDD采用磁性碟片来存储，混合硬盘（HHD: Hybrid Hard Disk）是把磁性硬盘和闪存集成到一起的一种硬盘。绝大多数硬盘都是固定硬盘，被永久性地密封固定在硬盘驱动器中。\n内存是计算机中重要的部件之一，它是与CPU进行沟通的桥梁。计算机中所有程序的运行都是在内存中进行的，因此内存的性能对计算机的影响非常大。内存（Memory）也被称为内存储器，其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来，内存的运行也决定了计算机的稳定运行。 内存是由内存芯片、电路板、金手指等部分组成的\n\n![upload successful](\\\\images\\image.png\\)","slug":"硬盘","published":1,"updated":"2017-05-07T08:59:03.549Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3yhsnz30006k4pt6zttbwm7","content":"<p>硬盘不是内存。<br>硬盘是电脑主要的存储媒介之一，由一个或者多个铝制或者玻璃制的碟片组成。碟片外覆盖有铁磁性材料。<br><a id=\"more\"></a><br>硬盘有固态硬盘（SSD 盘，新式硬盘）、机械硬盘（HDD 传统硬盘）、混合硬盘（HHD 一块基于传统机械硬盘诞生出来的新硬盘）。SSD采用闪存颗粒来存储，HDD采用磁性碟片来存储，混合硬盘（HHD: Hybrid Hard Disk）是把磁性硬盘和闪存集成到一起的一种硬盘。绝大多数硬盘都是固定硬盘，被永久性地密封固定在硬盘驱动器中。<br>内存是计算机中重要的部件之一，它是与CPU进行沟通的桥梁。计算机中所有程序的运行都是在内存中进行的，因此内存的性能对计算机的影响非常大。内存（Memory）也被称为内存储器，其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来，内存的运行也决定了计算机的稳定运行。 内存是由内存芯片、电路板、金手指等部分组成的</p>\n<p><img src=\"\\\\images\\image.png\\\" alt=\"upload successful\"></p>\n","site":{"data":{}},"excerpt":"<p>硬盘不是内存。<br>硬盘是电脑主要的存储媒介之一，由一个或者多个铝制或者玻璃制的碟片组成。碟片外覆盖有铁磁性材料。<br>","more":"<br>硬盘有固态硬盘（SSD 盘，新式硬盘）、机械硬盘（HDD 传统硬盘）、混合硬盘（HHD 一块基于传统机械硬盘诞生出来的新硬盘）。SSD采用闪存颗粒来存储，HDD采用磁性碟片来存储，混合硬盘（HHD: Hybrid Hard Disk）是把磁性硬盘和闪存集成到一起的一种硬盘。绝大多数硬盘都是固定硬盘，被永久性地密封固定在硬盘驱动器中。<br>内存是计算机中重要的部件之一，它是与CPU进行沟通的桥梁。计算机中所有程序的运行都是在内存中进行的，因此内存的性能对计算机的影响非常大。内存（Memory）也被称为内存储器，其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来，内存的运行也决定了计算机的稳定运行。 内存是由内存芯片、电路板、金手指等部分组成的</p>\n<p><img src=\"\\\\images\\image.png\\\" alt=\"upload successful\"></p>"},{"title":"虚拟内存（页面文件）","date":"2017-05-03T03:37:00.000Z","_content":"\n1.页面文件（pagefile.sys）也称虚拟内存，就是在硬盘上拿出（设定出）一部分空间作为暂不被调用程序或叫“惰性”程序及相关数据的临时存放空间。\n\n<!-- more -->\n\n因内存容量总是有限,而实际运行的程序会很多，若都塞在内存中会大量占用有限的内存资源，不利于系统正常、快速、流畅地调用、运行急需的程序及数据。于是系统就开辟出一部分硬盘空间将惰性程序及相关数据暂时存放于此，而让即将被调用的程序或称“活性”程序及数据存留在内存中方便马上调用；而页面文件中暂存的“惰性程序”及数据待CPU需要调用时再与内存交互，如此即为页面文件的工作原理。页面文件像内存一样起到中间暂存、交换作用又是硬盘空间的一部分，所以又叫虚拟内存。\n\n \n\n2。\n\n页面文件如同文件夹中常见文件一样，是实实在在存在的文件，只是为安全起见系统将其默认为隐藏文件，显示后一般可在系统盘根目录中见到名为pagefile.sys的文件，它就是页面文件。\n\n \n\n3。\n\n要修改页面文件（虚拟内存）的存放位置及大小，对XP而言：可在“我的电脑”上右击选“属性”—“高级”选项卡里的“性能”选项框中—“设置”—“高级”—“虚拟内存”框中—“更改”即来到虚拟内存设置窗口（WIN2000进入类似）。要先确定你的页面文件在哪个驱动器盘符，然后将别的盘符驱动器的页面文件全部禁用，可保留一个页面文件。微软的默认设置是，页面文件最小值应为物理内存的1.5倍，最大值为2-3倍。我的设置建议是同意微软的默认设置，不需要另设它值。若物理内存为1G又觉得1.5倍的最小值设置占硬盘空间较大，最小值可设为1G即物理内存的1倍，以后若出现问题则改回默认设置；最大值默认即可。因页面文件的使用是由小至大、逐渐增加的过程，若最小值范围内可正常运行、交互，系统就不会再增大到最大值的程度。\n\n \n\n4。\n\n页面文件最好单独设置在一个盘符里（我的机器就设置到了F盘中），如此能使系统调用虚拟内存中的程序及数据时能更快速、更流畅。还有，变更页面文件的位置之前最好能对相应盘符进行磁盘碎片整理，以使页面文件连续、规律地存放利于快速读取。\n\n ","source":"_posts/虚拟内存.md","raw":"title: 虚拟内存（页面文件）\ntags: []\ncategories: []\ndate: 2017-05-03 11:37:00\n---\n\n1.页面文件（pagefile.sys）也称虚拟内存，就是在硬盘上拿出（设定出）一部分空间作为暂不被调用程序或叫“惰性”程序及相关数据的临时存放空间。\n\n<!-- more -->\n\n因内存容量总是有限,而实际运行的程序会很多，若都塞在内存中会大量占用有限的内存资源，不利于系统正常、快速、流畅地调用、运行急需的程序及数据。于是系统就开辟出一部分硬盘空间将惰性程序及相关数据暂时存放于此，而让即将被调用的程序或称“活性”程序及数据存留在内存中方便马上调用；而页面文件中暂存的“惰性程序”及数据待CPU需要调用时再与内存交互，如此即为页面文件的工作原理。页面文件像内存一样起到中间暂存、交换作用又是硬盘空间的一部分，所以又叫虚拟内存。\n\n \n\n2。\n\n页面文件如同文件夹中常见文件一样，是实实在在存在的文件，只是为安全起见系统将其默认为隐藏文件，显示后一般可在系统盘根目录中见到名为pagefile.sys的文件，它就是页面文件。\n\n \n\n3。\n\n要修改页面文件（虚拟内存）的存放位置及大小，对XP而言：可在“我的电脑”上右击选“属性”—“高级”选项卡里的“性能”选项框中—“设置”—“高级”—“虚拟内存”框中—“更改”即来到虚拟内存设置窗口（WIN2000进入类似）。要先确定你的页面文件在哪个驱动器盘符，然后将别的盘符驱动器的页面文件全部禁用，可保留一个页面文件。微软的默认设置是，页面文件最小值应为物理内存的1.5倍，最大值为2-3倍。我的设置建议是同意微软的默认设置，不需要另设它值。若物理内存为1G又觉得1.5倍的最小值设置占硬盘空间较大，最小值可设为1G即物理内存的1倍，以后若出现问题则改回默认设置；最大值默认即可。因页面文件的使用是由小至大、逐渐增加的过程，若最小值范围内可正常运行、交互，系统就不会再增大到最大值的程度。\n\n \n\n4。\n\n页面文件最好单独设置在一个盘符里（我的机器就设置到了F盘中），如此能使系统调用虚拟内存中的程序及数据时能更快速、更流畅。还有，变更页面文件的位置之前最好能对相应盘符进行磁盘碎片整理，以使页面文件连续、规律地存放利于快速读取。\n\n ","slug":"虚拟内存","published":1,"updated":"2017-05-07T08:59:04.783Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3yhsnz60007k4ptx0c531k8","content":"<p>1.页面文件（pagefile.sys）也称虚拟内存，就是在硬盘上拿出（设定出）一部分空间作为暂不被调用程序或叫“惰性”程序及相关数据的临时存放空间。</p>\n<a id=\"more\"></a>\n<p>因内存容量总是有限,而实际运行的程序会很多，若都塞在内存中会大量占用有限的内存资源，不利于系统正常、快速、流畅地调用、运行急需的程序及数据。于是系统就开辟出一部分硬盘空间将惰性程序及相关数据暂时存放于此，而让即将被调用的程序或称“活性”程序及数据存留在内存中方便马上调用；而页面文件中暂存的“惰性程序”及数据待CPU需要调用时再与内存交互，如此即为页面文件的工作原理。页面文件像内存一样起到中间暂存、交换作用又是硬盘空间的一部分，所以又叫虚拟内存。</p>\n<p>2。</p>\n<p>页面文件如同文件夹中常见文件一样，是实实在在存在的文件，只是为安全起见系统将其默认为隐藏文件，显示后一般可在系统盘根目录中见到名为pagefile.sys的文件，它就是页面文件。</p>\n<p>3。</p>\n<p>要修改页面文件（虚拟内存）的存放位置及大小，对XP而言：可在“我的电脑”上右击选“属性”—“高级”选项卡里的“性能”选项框中—“设置”—“高级”—“虚拟内存”框中—“更改”即来到虚拟内存设置窗口（WIN2000进入类似）。要先确定你的页面文件在哪个驱动器盘符，然后将别的盘符驱动器的页面文件全部禁用，可保留一个页面文件。微软的默认设置是，页面文件最小值应为物理内存的1.5倍，最大值为2-3倍。我的设置建议是同意微软的默认设置，不需要另设它值。若物理内存为1G又觉得1.5倍的最小值设置占硬盘空间较大，最小值可设为1G即物理内存的1倍，以后若出现问题则改回默认设置；最大值默认即可。因页面文件的使用是由小至大、逐渐增加的过程，若最小值范围内可正常运行、交互，系统就不会再增大到最大值的程度。</p>\n<p>4。</p>\n<p>页面文件最好单独设置在一个盘符里（我的机器就设置到了F盘中），如此能使系统调用虚拟内存中的程序及数据时能更快速、更流畅。还有，变更页面文件的位置之前最好能对相应盘符进行磁盘碎片整理，以使页面文件连续、规律地存放利于快速读取。</p>\n","site":{"data":{}},"excerpt":"<p>1.页面文件（pagefile.sys）也称虚拟内存，就是在硬盘上拿出（设定出）一部分空间作为暂不被调用程序或叫“惰性”程序及相关数据的临时存放空间。</p>","more":"<p>因内存容量总是有限,而实际运行的程序会很多，若都塞在内存中会大量占用有限的内存资源，不利于系统正常、快速、流畅地调用、运行急需的程序及数据。于是系统就开辟出一部分硬盘空间将惰性程序及相关数据暂时存放于此，而让即将被调用的程序或称“活性”程序及数据存留在内存中方便马上调用；而页面文件中暂存的“惰性程序”及数据待CPU需要调用时再与内存交互，如此即为页面文件的工作原理。页面文件像内存一样起到中间暂存、交换作用又是硬盘空间的一部分，所以又叫虚拟内存。</p>\n<p>2。</p>\n<p>页面文件如同文件夹中常见文件一样，是实实在在存在的文件，只是为安全起见系统将其默认为隐藏文件，显示后一般可在系统盘根目录中见到名为pagefile.sys的文件，它就是页面文件。</p>\n<p>3。</p>\n<p>要修改页面文件（虚拟内存）的存放位置及大小，对XP而言：可在“我的电脑”上右击选“属性”—“高级”选项卡里的“性能”选项框中—“设置”—“高级”—“虚拟内存”框中—“更改”即来到虚拟内存设置窗口（WIN2000进入类似）。要先确定你的页面文件在哪个驱动器盘符，然后将别的盘符驱动器的页面文件全部禁用，可保留一个页面文件。微软的默认设置是，页面文件最小值应为物理内存的1.5倍，最大值为2-3倍。我的设置建议是同意微软的默认设置，不需要另设它值。若物理内存为1G又觉得1.5倍的最小值设置占硬盘空间较大，最小值可设为1G即物理内存的1倍，以后若出现问题则改回默认设置；最大值默认即可。因页面文件的使用是由小至大、逐渐增加的过程，若最小值范围内可正常运行、交互，系统就不会再增大到最大值的程度。</p>\n<p>4。</p>\n<p>页面文件最好单独设置在一个盘符里（我的机器就设置到了F盘中），如此能使系统调用虚拟内存中的程序及数据时能更快速、更流畅。还有，变更页面文件的位置之前最好能对相应盘符进行磁盘碎片整理，以使页面文件连续、规律地存放利于快速读取。</p>"},{"title":"热拔插","_content":"热插拔（hot-plugging或Hot Swap）即带电插拔，热插拔功能就是允许用户在不关闭系统，不切断电源的情况下取出和更换损坏的硬盘、电源或板卡等部件，从而提高了系统对灾难的及时恢复能力、扩展性和灵活性等。因为热插拔可以节省时间，减少操作步骤，还可以降低开关机时启动电流过大对计算机硬件的冲击（还有一个主要原因是符合人的惰性），所以被一些电脑玩家频繁使用。\n\n<!-- more -->\n\n关于硬盘的热拔插\n\n以前的硬盘磁头不具备自动停靠的功能，在通电状态下磁头是“飞行”在盘片上面的，当系统断电之前，必须用一条叫“Park”的专用命令，来让磁头归位。否则，就有可能因为盘片瞬间停转而磁头来不及归位，造成盘片被磁头“铲伤”。 \n\n \n\n而现在的硬盘，只有当读取数据的时候，磁头才会飞行在盘片表面。一旦读取动作结束，磁头立即自动归位停靠。同时，现在的硬盘都具备延时断电的功能。即当系统供电突然丢失时，硬盘本身的控制器能自动探测到这个变化，然后强迫磁头停止当前读写指令的执行，并使磁头正常归位.这个设计大大加强了硬盘在意外断电情况下的安全系数。 所以，盘片损伤的可能性其实是极低的。但这并不意味着热插拔硬盘是毫无危险的。因为开机状态下带电插拔硬盘，都会产生一个瞬时的冲击电流，过去我们认为这是造成硬盘带电插拔损坏的罪魁祸首。然而事实上，硬盘电源接口电路对这种瞬间电流的变化的宽容度是比较大的，绝大多数时候并不会导致硬盘电路板被烧毁。真正的危险来自于硬盘的数据线！ 在带电状态下插拔硬盘数据线，数据线上也会产生不正常的瞬间电流和压降，导致多个精密控制芯片被烧毁，这才是真正的“硬盘杀手”。 \n\n \n\n因此，只要我们能保证插拔电源线和数据线的顺序正确，即“插”硬盘的时候先接数据线，后接电源线；“拔”硬盘的时候正相反，先拔电源线，后拔数据线。这样，硬盘热插拔就不是天方夜谭！","source":"_posts/热拔插.md","raw":"---\ntitle: 热拔插\n---\n热插拔（hot-plugging或Hot Swap）即带电插拔，热插拔功能就是允许用户在不关闭系统，不切断电源的情况下取出和更换损坏的硬盘、电源或板卡等部件，从而提高了系统对灾难的及时恢复能力、扩展性和灵活性等。因为热插拔可以节省时间，减少操作步骤，还可以降低开关机时启动电流过大对计算机硬件的冲击（还有一个主要原因是符合人的惰性），所以被一些电脑玩家频繁使用。\n\n<!-- more -->\n\n关于硬盘的热拔插\n\n以前的硬盘磁头不具备自动停靠的功能，在通电状态下磁头是“飞行”在盘片上面的，当系统断电之前，必须用一条叫“Park”的专用命令，来让磁头归位。否则，就有可能因为盘片瞬间停转而磁头来不及归位，造成盘片被磁头“铲伤”。 \n\n \n\n而现在的硬盘，只有当读取数据的时候，磁头才会飞行在盘片表面。一旦读取动作结束，磁头立即自动归位停靠。同时，现在的硬盘都具备延时断电的功能。即当系统供电突然丢失时，硬盘本身的控制器能自动探测到这个变化，然后强迫磁头停止当前读写指令的执行，并使磁头正常归位.这个设计大大加强了硬盘在意外断电情况下的安全系数。 所以，盘片损伤的可能性其实是极低的。但这并不意味着热插拔硬盘是毫无危险的。因为开机状态下带电插拔硬盘，都会产生一个瞬时的冲击电流，过去我们认为这是造成硬盘带电插拔损坏的罪魁祸首。然而事实上，硬盘电源接口电路对这种瞬间电流的变化的宽容度是比较大的，绝大多数时候并不会导致硬盘电路板被烧毁。真正的危险来自于硬盘的数据线！ 在带电状态下插拔硬盘数据线，数据线上也会产生不正常的瞬间电流和压降，导致多个精密控制芯片被烧毁，这才是真正的“硬盘杀手”。 \n\n \n\n因此，只要我们能保证插拔电源线和数据线的顺序正确，即“插”硬盘的时候先接数据线，后接电源线；“拔”硬盘的时候正相反，先拔电源线，后拔数据线。这样，硬盘热插拔就不是天方夜谭！","slug":"热拔插","published":1,"date":"2017-05-07T08:59:01.703Z","updated":"2017-05-07T08:59:01.922Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3yhsnzc0008k4pte7jwq14c","content":"<p>热插拔（hot-plugging或Hot Swap）即带电插拔，热插拔功能就是允许用户在不关闭系统，不切断电源的情况下取出和更换损坏的硬盘、电源或板卡等部件，从而提高了系统对灾难的及时恢复能力、扩展性和灵活性等。因为热插拔可以节省时间，减少操作步骤，还可以降低开关机时启动电流过大对计算机硬件的冲击（还有一个主要原因是符合人的惰性），所以被一些电脑玩家频繁使用。</p>\n<a id=\"more\"></a>\n<p>关于硬盘的热拔插</p>\n<p>以前的硬盘磁头不具备自动停靠的功能，在通电状态下磁头是“飞行”在盘片上面的，当系统断电之前，必须用一条叫“Park”的专用命令，来让磁头归位。否则，就有可能因为盘片瞬间停转而磁头来不及归位，造成盘片被磁头“铲伤”。 </p>\n<p>而现在的硬盘，只有当读取数据的时候，磁头才会飞行在盘片表面。一旦读取动作结束，磁头立即自动归位停靠。同时，现在的硬盘都具备延时断电的功能。即当系统供电突然丢失时，硬盘本身的控制器能自动探测到这个变化，然后强迫磁头停止当前读写指令的执行，并使磁头正常归位.这个设计大大加强了硬盘在意外断电情况下的安全系数。 所以，盘片损伤的可能性其实是极低的。但这并不意味着热插拔硬盘是毫无危险的。因为开机状态下带电插拔硬盘，都会产生一个瞬时的冲击电流，过去我们认为这是造成硬盘带电插拔损坏的罪魁祸首。然而事实上，硬盘电源接口电路对这种瞬间电流的变化的宽容度是比较大的，绝大多数时候并不会导致硬盘电路板被烧毁。真正的危险来自于硬盘的数据线！ 在带电状态下插拔硬盘数据线，数据线上也会产生不正常的瞬间电流和压降，导致多个精密控制芯片被烧毁，这才是真正的“硬盘杀手”。 </p>\n<p>因此，只要我们能保证插拔电源线和数据线的顺序正确，即“插”硬盘的时候先接数据线，后接电源线；“拔”硬盘的时候正相反，先拔电源线，后拔数据线。这样，硬盘热插拔就不是天方夜谭！</p>\n","site":{"data":{}},"excerpt":"<p>热插拔（hot-plugging或Hot Swap）即带电插拔，热插拔功能就是允许用户在不关闭系统，不切断电源的情况下取出和更换损坏的硬盘、电源或板卡等部件，从而提高了系统对灾难的及时恢复能力、扩展性和灵活性等。因为热插拔可以节省时间，减少操作步骤，还可以降低开关机时启动电流过大对计算机硬件的冲击（还有一个主要原因是符合人的惰性），所以被一些电脑玩家频繁使用。</p>","more":"<p>关于硬盘的热拔插</p>\n<p>以前的硬盘磁头不具备自动停靠的功能，在通电状态下磁头是“飞行”在盘片上面的，当系统断电之前，必须用一条叫“Park”的专用命令，来让磁头归位。否则，就有可能因为盘片瞬间停转而磁头来不及归位，造成盘片被磁头“铲伤”。 </p>\n<p>而现在的硬盘，只有当读取数据的时候，磁头才会飞行在盘片表面。一旦读取动作结束，磁头立即自动归位停靠。同时，现在的硬盘都具备延时断电的功能。即当系统供电突然丢失时，硬盘本身的控制器能自动探测到这个变化，然后强迫磁头停止当前读写指令的执行，并使磁头正常归位.这个设计大大加强了硬盘在意外断电情况下的安全系数。 所以，盘片损伤的可能性其实是极低的。但这并不意味着热插拔硬盘是毫无危险的。因为开机状态下带电插拔硬盘，都会产生一个瞬时的冲击电流，过去我们认为这是造成硬盘带电插拔损坏的罪魁祸首。然而事实上，硬盘电源接口电路对这种瞬间电流的变化的宽容度是比较大的，绝大多数时候并不会导致硬盘电路板被烧毁。真正的危险来自于硬盘的数据线！ 在带电状态下插拔硬盘数据线，数据线上也会产生不正常的瞬间电流和压降，导致多个精密控制芯片被烧毁，这才是真正的“硬盘杀手”。 </p>\n<p>因此，只要我们能保证插拔电源线和数据线的顺序正确，即“插”硬盘的时候先接数据线，后接电源线；“拔”硬盘的时候正相反，先拔电源线，后拔数据线。这样，硬盘热插拔就不是天方夜谭！</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj3yhsnym0001k4pttmean4sw","category_id":"cj3yhsnys0003k4pt3ebrlwdr","_id":"cj3yhsnzh000bk4pt23lrtuan"},{"post_id":"cj3yhsnym0001k4pttmean4sw","category_id":"cj3yhsnze0009k4ptay09lxus","_id":"cj3yhsnzi000ck4pteywzevkz"}],"PostTag":[{"post_id":"cj3yhsnyq0002k4pt6nuy23me","tag_id":"cj3yhsnz20005k4pt15e80iup","_id":"cj3yhsnzg000ak4pthnni7xdf"}],"Tag":[{"name":"数据结构","_id":"cj3yhsnz20005k4pt15e80iup"}]}}